<?xml version="1.0" encoding="UTF-8"?>  
<beans  
    xmlns="http://www.springframework.org/schema/beans"  
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"  
    xmlns:p="http://www.springframework.org/schema/p"  
    xsi:schemaLocation="http://www.springframework.org/schema/beans  
        http://www.springframework.org/schema/beans/spring-beans-3.0.xsd"> 
    
    
    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
        <property name="driverClassName" value="com.mysql.jdbc.Driver"></property>
        <property name="url" value="jdbc:mysql://localhost:3306/twitter_hibernate"></property>
        <property name="username" value="root"></property>
        <property name="password" value=""></property>
    </bean>
    
    
    <!--bean id="mySessionFactory" class="org.springframework.orm.hibernate3.LocalSessionFactoryBean"-->
    <bean id="mySessionFactory"
          class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
        <property name="dataSource" ref="dataSource"></property>
        
        <!--property name="mappingResources">
            <list>
                <value>hibernate.cfg.xml</value>
            </list>
        </property-->
        
        <property name="annotatedClasses">
            <list>
                <value>com.crm.twittermodel.entity.TwitterAccounts</value>
                <value>com.crm.twittermodel.entity.TwitterDirectMessages</value>
            </list>
        </property>
        
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
                <prop key="hibernate.hbm2ddl.auto">update</prop>
                <prop key="hibernate.show_sql">true</prop>
            </props>
            
        </property>
        
    </bean>
    
    
    <bean id="template" class="org.springframework.orm.hibernate3.HibernateTemplate">
        <property name="sessionFactory" ref="mySessionFactory"></property>
    </bean>
    
    <bean id="twitterDAO" class="com.crm.twittermodel.dao.TwitterDAO">
        <property name="template" ref="template"></property>
    </bean>
    
    <!--SPRING QUARTZ-->
    <bean id="runMeTask" class="com.crm.twittermodel.quartz.RunMeTask"></bean>
    <!--bean id="runMeJob" 
          class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
        <property name="targetObject" ref="runMeTask" />
        <property name="targetMethod" value="printMe" />
    </bean-->
    
    <bean name="runMeJob" class="org.springframework.scheduling.quartz.JobDetailBean">
        <property name="jobClass" value="com.crm.twittermodel.quartz.RunMeJob" />
        <property name="jobDataAsMap">
            <map>
                <entry key="runMeTask" value-ref="runMeTask" />
            </map>
        </property>
    </bean>
    
    <!-- Simple Trigger, run every 5 seconds -->
    <bean id="simpleTrigger" 
          class="org.springframework.scheduling.quartz.SimpleTriggerBean">
		
        <property name="jobDetail" ref="runMeJob" />
        <property name="repeatInterval" value="5000" />
        <property name="startDelay" value="1000" />
		
    </bean>
    
    <!-- Cron Trigger, run every 5 seconds -->
    <bean id="cronTrigger" 
              class="org.springframework.scheduling.quartz.CronTriggerBean">

        <property name="jobDetail" ref="runMeJob" />
        <property name="cronExpression" value="0/5 * * * * ?" />

    </bean>

    <bean class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
        <property name="jobDetails">
            <list>
                <ref bean="runMeJob" />
            </list>
        </property>

        <property name="triggers">
            <list>
                <ref bean="simpleTrigger" />
            </list>
        </property>
    </bean>
    
    
</beans>